generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id                  String            @id @default(uuid())
  name                String
  location            String
  startDate           DateTime
  endDate             DateTime
  pricePerDay         Decimal           @db.Decimal(8, 2)
  description         String
  coverImage          String
  imagesUrl           String[]
  highlights          String[]
  locationDescription String            @default("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse hendrerit auctor nisl non blandit. Aliquam consectetur enim eu ullamcorper feugiat. Quisque lectus risus, semper at lectus nec, condimentum pharetra tellus.")
  maxGuests           Int
  reservations        TripReservation[]
  countryCode         String
  recommended         Boolean           @default(false)
}

model TripReservation {
  id        String   @id @default(uuid())
  tripId    String
  trip      Trip     @relation(fields: [tripId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  startDate DateTime
  endDate   DateTime
  totalPaid Decimal  @db.Decimal(8, 2)
}

model User {
  id            String            @id @default(cuid())
  name          String?
  email         String            @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  reservations  TripReservation[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
